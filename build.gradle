buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.palantir:jacoco-coverage:0.4.0'
    }
}

apply plugin: 'com.palantir.jacoco-full-report'

jacocoFull {
    excludeProject ":android", ":desktop"
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        jcenter()
    }
}

configure(subprojects - project(':android')) {
    apply plugin: 'java'
    sourceCompatibility = 1.6

    apply plugin: "idea"
    idea {
        module {
            scopes.PROVIDED.minus += [configurations.compile]
            scopes.COMPILE.plus += [configurations.compile]
        }
    }

    test {
        // enable TestNG support (default is JUnit)
        useTestNG()

        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true

        // set heap size for the test JVM(s)
        minHeapSize = "128m"
        maxHeapSize = "512m"

        // set JVM arguments for the test JVM(s)
        jvmArgs '-XX:MaxPermSize=256m'

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
        }
    }

    apply plugin: "jacoco"

    task testNG(type: Test) {
        useTestNG()
        jacoco {
            destinationFile = file("$buildDir/jacoco/test.exec")
        }
    }

    jacocoTestReport {
        executionData testNG
    }
}

subprojects {
    version = '0.0.1-SNAPSHOT'
    ext.appName = 'Adventure Emulation'
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

// Clearing Eclipse project data in root folder:
tasks.eclipse.doLast {
    delete '.project'
    delete '.classpath'
    delete '.settings/'
}
